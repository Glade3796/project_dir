/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/nWG7HG2f5SU
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";

import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import {
	DropdownMenu,
	DropdownMenuTrigger,
	DropdownMenuContent,
	DropdownMenuCheckboxItem,
} from "@/components/ui/dropdown-menu";

export function SummaryFilterNav() {
	const [completed, setCompleted] = useState(true);
	const [live, setLive] = useState(false);
	const [showFilters, setShowFilters] = useState(false);
	return (
		<div className='flex flex-col gap-4 bg-card px-4 py-3 rounded-lg shadow-sm sm:flex-row sm:items-center'>
			<div className='flex flex-wrap items-center gap-2 sm:flex-1'>
				<Button
					variant={showFilters ? "primary" : "outline"}
					size='sm'
					onClick={() => setShowFilters(!showFilters)}
				>
					<FilterIcon
						className={`w-4 h-4 mr-2 ${
							showFilters ? "text-primary-foreground" : ""
						}`}
					/>
					Filters
				</Button>
				{showFilters && (
					<div className='flex flex-wrap items-center gap-2'>
						<Button
							variant={completed ? "primary" : "outline"}
							size='sm'
							onClick={() => setCompleted(!completed)}
						>
							<CheckIcon
								className={`w-4 h-4 mr-2 ${
									completed ? "text-primary-foreground" : ""
								}`}
							/>
							Completed
						</Button>
						<Button
							variant={live ? "primary" : "outline"}
							size='sm'
							onClick={() => setLive(!live)}
						>
							<ZapIcon
								className={`w-4 h-4 mr-2 ${
									live ? "text-primary-foreground" : ""
								}`}
							/>
							Live
						</Button>
						<DropdownMenu>
							<DropdownMenuTrigger asChild>
								<Button variant='outline' size='sm'>
									<CodeIcon className='w-4 h-4 mr-2' />
									Technologies
								</Button>
							</DropdownMenuTrigger>
							<DropdownMenuContent align='start' className='w-48'>
								<DropdownMenuCheckboxItem checked>
									React
								</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Vue</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Angular</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Svelte</DropdownMenuCheckboxItem>
							</DropdownMenuContent>
						</DropdownMenu>
						<DropdownMenu>
							<DropdownMenuTrigger asChild>
								<Button variant='outline' size='sm'>
									<BriefcaseIcon className='w-4 h-4 mr-2' />
									Type
								</Button>
							</DropdownMenuTrigger>
							<DropdownMenuContent align='start' className='w-48'>
								<DropdownMenuCheckboxItem checked>
									Feature
								</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Bug</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Improvement</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Task</DropdownMenuCheckboxItem>
							</DropdownMenuContent>
						</DropdownMenu>
						<DropdownMenu>
							<DropdownMenuTrigger asChild>
								<Button variant='outline' size='sm'>
									<PercentIcon className='w-4 h-4 mr-2' />
									Progress
								</Button>
							</DropdownMenuTrigger>
							<DropdownMenuContent align='start' className='w-48'>
								<DropdownMenuCheckboxItem checked>
									0-25%
								</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>25-50%</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>50-75%</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>75-100%</DropdownMenuCheckboxItem>
							</DropdownMenuContent>
						</DropdownMenu>
						<DropdownMenu>
							<DropdownMenuTrigger asChild>
								<Button variant='outline' size='sm'>
									<CalendarIcon className='w-4 h-4 mr-2' />
									Date
								</Button>
							</DropdownMenuTrigger>
							<DropdownMenuContent align='start' className='w-48'>
								<DropdownMenuCheckboxItem checked>
									This Week
								</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>This Month</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>This Year</DropdownMenuCheckboxItem>
								<DropdownMenuCheckboxItem>Custom</DropdownMenuCheckboxItem>
							</DropdownMenuContent>
						</DropdownMenu>
					</div>
				)}
			</div>
			<DropdownMenu>
				<DropdownMenuTrigger asChild>
					<Button variant='outline' size='sm'>
						<ListOrderedIcon className='w-4 h-4 mr-2' />
						Sort by
					</Button>
				</DropdownMenuTrigger>
				<DropdownMenuContent align='start' className='w-48'>
					<DropdownMenuCheckboxItem checked>Newest</DropdownMenuCheckboxItem>
					<DropdownMenuCheckboxItem>Oldest</DropdownMenuCheckboxItem>
					<DropdownMenuCheckboxItem>Completed</DropdownMenuCheckboxItem>
					<DropdownMenuCheckboxItem>Live</DropdownMenuCheckboxItem>
				</DropdownMenuContent>
			</DropdownMenu>
		</div>
	);
}

function BriefcaseIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<path d='M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16' />
			<rect width='20' height='14' x='2' y='6' rx='2' />
		</svg>
	);
}

function CalendarIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<path d='M8 2v4' />
			<path d='M16 2v4' />
			<rect width='18' height='18' x='3' y='4' rx='2' />
			<path d='M3 10h18' />
		</svg>
	);
}

function CheckIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<path d='M20 6 9 17l-5-5' />
		</svg>
	);
}

function CodeIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<polyline points='16 18 22 12 16 6' />
			<polyline points='8 6 2 12 8 18' />
		</svg>
	);
}

function FilterIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<polygon points='22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3' />
		</svg>
	);
}

function ListOrderedIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<line x1='10' x2='21' y1='6' y2='6' />
			<line x1='10' x2='21' y1='12' y2='12' />
			<line x1='10' x2='21' y1='18' y2='18' />
			<path d='M4 6h1v4' />
			<path d='M4 10h2' />
			<path d='M6 18H4c0-1 2-2 2-3s-1-1.5-2-1' />
		</svg>
	);
}

function PercentIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<line x1='19' x2='5' y1='5' y2='19' />
			<circle cx='6.5' cy='6.5' r='2.5' />
			<circle cx='17.5' cy='17.5' r='2.5' />
		</svg>
	);
}

function ZapIcon(props: React.SVGProps<SVGSVGElement>) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'
		>
			<path d='M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z' />
		</svg>
	);
}
